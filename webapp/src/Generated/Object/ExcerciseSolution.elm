-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Generated.Object.ExcerciseSolution exposing (..)

import Generated.InputObject
import Generated.Interface
import Generated.Object
import Generated.Scalar
import Generated.ScalarCodecs
import Generated.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
-}
int : SelectionSet Float Generated.Object.ExcerciseSolution
int =
    Object.selectionForField "Float" "Int" [] Decode.float


solution : SelectionSet String Generated.Object.ExcerciseSolution
solution =
    Object.selectionForField "String" "solution" [] Decode.string


excercise :
    SelectionSet decodesTo Generated.Object.Excercise
    -> SelectionSet decodesTo Generated.Object.ExcerciseSolution
excercise object____ =
    Object.selectionForCompositeField "excercise" [] object____ Basics.identity


solverId : SelectionSet String Generated.Object.ExcerciseSolution
solverId =
    Object.selectionForField "String" "solverId" [] Decode.string


student :
    SelectionSet decodesTo Generated.Object.Student
    -> SelectionSet decodesTo Generated.Object.ExcerciseSolution
student object____ =
    Object.selectionForCompositeField "student" [] object____ Basics.identity
