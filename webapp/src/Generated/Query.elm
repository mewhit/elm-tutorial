-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Generated.Query exposing (..)

import Generated.InputObject
import Generated.Interface
import Generated.Object
import Generated.Scalar
import Generated.ScalarCodecs
import Generated.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias EntitiesRequiredArguments =
    { representations : List Generated.ScalarCodecs.Any_ }


entities_ :
    EntitiesRequiredArguments
    -> SelectionSet decodesTo Generated.Union.Entity_
    -> SelectionSet (List (Maybe decodesTo)) RootQuery
entities_ requiredArgs____ object____ =
    Object.selectionForCompositeField "_entities" [ Argument.required "representations" requiredArgs____.representations ((Generated.ScalarCodecs.codecs |> Generated.Scalar.unwrapEncoder .codecAny_) |> Encode.list) ] object____ (Basics.identity >> Decode.nullable >> Decode.list)


service_ :
    SelectionSet decodesTo Generated.Object.Service_
    -> SelectionSet decodesTo RootQuery
service_ object____ =
    Object.selectionForCompositeField "_service" [] object____ Basics.identity


solutionByStudentId :
    SelectionSet decodesTo Generated.Object.ExcerciseSolution
    -> SelectionSet (List decodesTo) RootQuery
solutionByStudentId object____ =
    Object.selectionForCompositeField "solutionByStudentId" [] object____ (Basics.identity >> Decode.list)
